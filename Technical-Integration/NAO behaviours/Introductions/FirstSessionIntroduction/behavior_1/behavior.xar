<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Animated Say" id="2" localization="8" tooltip="Say some text with animations. The text can be localized." x="296" y="167">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="el dÃ­a de hoy vamos a practicar a caminar en el  si pi walker. Y yo te voy a ayudar para que lo hagas bien" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Say" id="3" localization="8" tooltip="Say some text. The text can be localized." x="499" y="141">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="98" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Y nos divirtamos mucho!" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Excited" id="1" localization="8" tooltip="ID : #02A 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Excited" x="509" y="286">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="54">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="7" value="-38.5" />
                    <Key frame="14" value="-1.4" />
                    <Key frame="17" value="-28.8" />
                    <Key frame="22" value="-11.2" />
                    <Key frame="26" value="-28.8" />
                    <Key frame="31" value="-11.2" />
                    <Key frame="35" value="-28.8" />
                    <Key frame="39" value="-11.2" />
                    <Key frame="50" value="-25.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="7" value="-0.969218" />
                    <Key frame="50" value="-0.969218" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="14" value="-8.17634" />
                    <Key frame="18" value="-10.4615" />
                    <Key frame="22" value="-8.17634" />
                    <Key frame="26" value="-10.4615" />
                    <Key frame="30" value="-8.17634" />
                    <Key frame="34" value="-10.4615" />
                    <Key frame="38" value="-8.17634" />
                    <Key frame="42" value="-10.4615" />
                    <Key frame="46" value="-8.17634" />
                    <Key frame="50" value="-10.4615" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="14" value="-6.32579" />
                    <Key frame="18" value="-6.32579" />
                    <Key frame="22" value="-6.32579" />
                    <Key frame="26" value="-6.32579" />
                    <Key frame="30" value="-6.32579" />
                    <Key frame="34" value="-6.32579" />
                    <Key frame="38" value="-6.32579" />
                    <Key frame="42" value="-6.32579" />
                    <Key frame="46" value="-6.32579" />
                    <Key frame="50" value="-6.32579" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="-85.5" />
                    <Key frame="18" value="-85.9557" />
                    <Key frame="22" value="-74.5" />
                    <Key frame="26" value="-85.9557" />
                    <Key frame="30" value="-74.5" />
                    <Key frame="34" value="-85.9557" />
                    <Key frame="38" value="-74.5" />
                    <Key frame="42" value="-85.9557" />
                    <Key frame="46" value="-74.5" />
                    <Key frame="50" value="-85.9557" />
                    <Key frame="54" value="-74.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="18" value="-81.3901" />
                    <Key frame="26" value="-81.3901" />
                    <Key frame="34" value="-81.3901" />
                    <Key frame="42" value="-81.3901" />
                    <Key frame="50" value="-81.3901" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="10" value="0.63" />
                    <Key frame="18" value="0.27" />
                    <Key frame="22" value="0" />
                    <Key frame="26" value="0.24" />
                    <Key frame="30" value="0" />
                    <Key frame="34" value="0.28" />
                    <Key frame="38" value="0" />
                    <Key frame="42" value="0.26" />
                    <Key frame="46" value="0" />
                    <Key frame="50" value="0.24" />
                    <Key frame="54" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="14" value="-28.0351" />
                    <Key frame="18" value="-38.1426" />
                    <Key frame="22" value="-28.0351" />
                    <Key frame="26" value="-38.1426" />
                    <Key frame="30" value="-28.0351" />
                    <Key frame="34" value="-38.1426" />
                    <Key frame="38" value="-28.0351" />
                    <Key frame="42" value="-38.1426" />
                    <Key frame="46" value="-28.0351" />
                    <Key frame="50" value="-38.1426" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="14" value="4.3091" />
                    <Key frame="18" value="4.3091" />
                    <Key frame="22" value="4.3091" />
                    <Key frame="26" value="4.3091" />
                    <Key frame="30" value="4.3091" />
                    <Key frame="34" value="4.3091" />
                    <Key frame="38" value="4.3091" />
                    <Key frame="42" value="4.3091" />
                    <Key frame="46" value="4.3091" />
                    <Key frame="50" value="4.3091" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="14" value="-11.7751" />
                    <Key frame="18" value="-13.0056" />
                    <Key frame="22" value="-11.7751" />
                    <Key frame="26" value="-13.0056" />
                    <Key frame="30" value="-11.7751" />
                    <Key frame="34" value="-13.0056" />
                    <Key frame="38" value="-11.7751" />
                    <Key frame="42" value="-13.0056" />
                    <Key frame="46" value="-11.7751" />
                    <Key frame="50" value="-13.0056" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="14" value="37" />
                    <Key frame="18" value="46.9318" />
                    <Key frame="22" value="37" />
                    <Key frame="26" value="46.9318" />
                    <Key frame="30" value="37" />
                    <Key frame="34" value="46.9318" />
                    <Key frame="38" value="37" />
                    <Key frame="42" value="46.9318" />
                    <Key frame="46" value="37" />
                    <Key frame="50" value="46.9318" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="8" value="54.2" />
                    <Key frame="16" value="66.2" />
                    <Key frame="20" value="69.6" />
                    <Key frame="24" value="66.2" />
                    <Key frame="28" value="69.6" />
                    <Key frame="32" value="66.2" />
                    <Key frame="36" value="69.6" />
                    <Key frame="40" value="66.2" />
                    <Key frame="44" value="69.6" />
                    <Key frame="48" value="66.2" />
                    <Key frame="52" value="69.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="8" value="12.8" />
                    <Key frame="16" value="-6.3306" />
                    <Key frame="24" value="-6.3306" />
                    <Key frame="32" value="-6.3306" />
                    <Key frame="40" value="-6.3306" />
                    <Key frame="48" value="-6.3306" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="10" value="-36.1" />
                    <Key frame="18" value="5.79845" />
                    <Key frame="26" value="5.79845" />
                    <Key frame="34" value="5.79845" />
                    <Key frame="42" value="5.79845" />
                    <Key frame="50" value="5.79845" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="14" value="-10.7204" />
                    <Key frame="18" value="-13.3571" />
                    <Key frame="22" value="-10.7204" />
                    <Key frame="26" value="-13.3571" />
                    <Key frame="30" value="-10.7204" />
                    <Key frame="34" value="-13.3571" />
                    <Key frame="38" value="-10.7204" />
                    <Key frame="42" value="-13.3571" />
                    <Key frame="46" value="-10.7204" />
                    <Key frame="50" value="-13.3571" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="14" value="7.12163" />
                    <Key frame="18" value="7.12163" />
                    <Key frame="22" value="7.12163" />
                    <Key frame="26" value="7.12163" />
                    <Key frame="30" value="7.12163" />
                    <Key frame="34" value="7.12163" />
                    <Key frame="38" value="7.12163" />
                    <Key frame="42" value="7.12163" />
                    <Key frame="46" value="7.12163" />
                    <Key frame="50" value="7.12163" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="85.5" />
                    <Key frame="15" value="85.1695" />
                    <Key frame="19" value="74.5" />
                    <Key frame="23" value="85.1695" />
                    <Key frame="27" value="74.5" />
                    <Key frame="31" value="85.1695" />
                    <Key frame="35" value="74.5" />
                    <Key frame="39" value="85.1695" />
                    <Key frame="43" value="74.5" />
                    <Key frame="47" value="85.1695" />
                    <Key frame="51" value="74.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="15" value="76.7271" />
                    <Key frame="23" value="76.7271" />
                    <Key frame="31" value="76.7271" />
                    <Key frame="39" value="76.7271" />
                    <Key frame="47" value="76.7271" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="10" value="0.63" />
                    <Key frame="15" value="0.27" />
                    <Key frame="19" value="0" />
                    <Key frame="23" value="0.24" />
                    <Key frame="27" value="0" />
                    <Key frame="31" value="0.28" />
                    <Key frame="35" value="0" />
                    <Key frame="39" value="0.26" />
                    <Key frame="43" value="0" />
                    <Key frame="47" value="0.24" />
                    <Key frame="51" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="14" value="-27.8641" />
                    <Key frame="18" value="-38.1474" />
                    <Key frame="22" value="-27.8641" />
                    <Key frame="26" value="-38.1474" />
                    <Key frame="30" value="-27.8641" />
                    <Key frame="34" value="-38.1474" />
                    <Key frame="38" value="-27.8641" />
                    <Key frame="42" value="-38.1474" />
                    <Key frame="46" value="-27.8641" />
                    <Key frame="50" value="-38.1474" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="14" value="-4.30429" />
                    <Key frame="18" value="-3.68905" />
                    <Key frame="22" value="-4.30429" />
                    <Key frame="26" value="-3.68905" />
                    <Key frame="30" value="-4.30429" />
                    <Key frame="34" value="-3.68905" />
                    <Key frame="38" value="-4.30429" />
                    <Key frame="42" value="-3.68905" />
                    <Key frame="46" value="-4.30429" />
                    <Key frame="50" value="-3.68905" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="14" value="-11.7751" />
                    <Key frame="18" value="-13.0056" />
                    <Key frame="22" value="-11.7751" />
                    <Key frame="26" value="-13.0056" />
                    <Key frame="30" value="-11.7751" />
                    <Key frame="34" value="-13.0056" />
                    <Key frame="38" value="-11.7751" />
                    <Key frame="42" value="-13.0056" />
                    <Key frame="46" value="-11.7751" />
                    <Key frame="50" value="-13.0056" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="14" value="38.0595" />
                    <Key frame="18" value="48.3428" />
                    <Key frame="22" value="38.0595" />
                    <Key frame="26" value="48.3428" />
                    <Key frame="30" value="38.0595" />
                    <Key frame="34" value="48.3428" />
                    <Key frame="38" value="38.0595" />
                    <Key frame="42" value="48.3428" />
                    <Key frame="46" value="38.0595" />
                    <Key frame="50" value="48.3428" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="8" value="54.2" />
                    <Key frame="13" value="66.2" />
                    <Key frame="17" value="69.6" />
                    <Key frame="21" value="66.2" />
                    <Key frame="25" value="69.6" />
                    <Key frame="29" value="66.2" />
                    <Key frame="33" value="69.6" />
                    <Key frame="37" value="66.2" />
                    <Key frame="41" value="69.6" />
                    <Key frame="45" value="66.2" />
                    <Key frame="49" value="69.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="8" value="-12.8" />
                    <Key frame="13" value="4.30429" />
                    <Key frame="21" value="4.30429" />
                    <Key frame="29" value="4.30429" />
                    <Key frame="37" value="4.30429" />
                    <Key frame="45" value="4.30429" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="10" value="36.1" />
                    <Key frame="15" value="6.32579" />
                    <Key frame="23" value="6.32579" />
                    <Key frame="31" value="6.32579" />
                    <Key frame="39" value="6.32579" />
                    <Key frame="47" value="6.32579" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="Stand Up" id="4" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="741" y="138">
              <bitmap>media/images/box/movement/stand.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
              <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
              <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
              <Timeline enable="0">
                <BehaviorLayer name="StandUpBehavior">
                  <BehaviorKeyframe name="DetectRobotPose" index="1">
                    <Diagram>
                      <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="All motors" type="Lock" timeout="0" />
            </Box>
            <Box name="Blink" id="6" localization="8" tooltip="This box makes the robot blink once." x="908" y="112">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed5", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration, _async=True )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
            </Box>
            <Box name="Blink (1)" id="5" localization="8" tooltip="This box makes the robot blink once." x="503" y="419">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed5", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration, _async=True )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
            </Box>
            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
            <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" />
            <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="3" />
            <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="3" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
