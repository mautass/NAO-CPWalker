<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="393" y="111">
              <bitmap>media/images/box/movement/stand.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
              <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
              <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
              <Timeline enable="0">
                <BehaviorLayer name="StandUpBehavior">
                  <BehaviorKeyframe name="DetectRobotPose" index="1">
                    <Diagram>
                      <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="All motors" type="Lock" timeout="0" />
            </Box>
            <Box name="Hip_crouch" id="4" localization="8" tooltip="ID : #02A 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Excited" x="186" y="84">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="70">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="15" value="-22.8542" />
                    <Key frame="31" value="-22.8542" />
                    <Key frame="45" value="-22.8542" />
                    <Key frame="59" value="-22.8542" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="15" value="-0.266077" />
                    <Key frame="31" value="-0.266077" />
                    <Key frame="45" value="-0.266077" />
                    <Key frame="59" value="-0.266077" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="15" value="-8.5279" />
                    <Key frame="31" value="-8.5279" />
                    <Key frame="45" value="-8.5279" />
                    <Key frame="59" value="-8.5279" />
                    <Key frame="70" value="5.18321" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="15" value="-6.06212" />
                    <Key frame="31" value="-6.06212" />
                    <Key frame="45" value="-6.06212" />
                    <Key frame="59" value="-6.06212" />
                    <Key frame="70" value="-6.50159" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="15" value="-49.5685" />
                    <Key frame="31" value="-81.3853" />
                    <Key frame="45" value="-66.8832" />
                    <Key frame="59" value="-47.0197" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="15" value="-81.0386" />
                    <Key frame="31" value="-87.4547" />
                    <Key frame="45" value="-87.4547" />
                    <Key frame="59" value="-85.1695" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="15" value="0.626" />
                    <Key frame="31" value="0.626" />
                    <Key frame="45" value="0.626" />
                    <Key frame="59" value="0.626" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="15" value="-27.5956" />
                    <Key frame="31" value="-27.5956" />
                    <Key frame="45" value="-27.5956" />
                    <Key frame="59" value="-27.5956" />
                    <Key frame="70" value="7.56109" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="15" value="4.04543" />
                    <Key frame="31" value="4.04543" />
                    <Key frame="45" value="4.04543" />
                    <Key frame="59" value="4.04543" />
                    <Key frame="70" value="6.77007" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="15" value="-11.863" />
                    <Key frame="31" value="-11.863" />
                    <Key frame="45" value="-11.863" />
                    <Key frame="59" value="-11.863" />
                    <Key frame="70" value="-9.75358" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="15" value="37" />
                    <Key frame="31" value="37" />
                    <Key frame="45" value="37" />
                    <Key frame="59" value="37" />
                    <Key frame="70" value="-5.45169" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="15" value="62.7523" />
                    <Key frame="31" value="18.9822" />
                    <Key frame="45" value="-25.8426" />
                    <Key frame="59" value="-45.8819" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="15" value="2.1949" />
                    <Key frame="31" value="16.9607" />
                    <Key frame="45" value="15.8181" />
                    <Key frame="59" value="8.4352" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="15" value="-21.8875" />
                    <Key frame="31" value="34.4511" />
                    <Key frame="45" value="64.4222" />
                    <Key frame="59" value="68.4652" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="15" value="-10.0173" />
                    <Key frame="31" value="-10.0173" />
                    <Key frame="45" value="-10.0173" />
                    <Key frame="59" value="-10.0173" />
                    <Key frame="70" value="5.10013" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="15" value="6.85796" />
                    <Key frame="31" value="6.85796" />
                    <Key frame="45" value="6.85796" />
                    <Key frame="59" value="6.85796" />
                    <Key frame="70" value="6.41851" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="15" value="82.7085" />
                    <Key frame="31" value="65.9212" />
                    <Key frame="45" value="37.9716" />
                    <Key frame="59" value="32.3466" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="15" value="35.0664" />
                    <Key frame="31" value="35.5937" />
                    <Key frame="45" value="23.8163" />
                    <Key frame="59" value="23.8163" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="15" value="0.6248" />
                    <Key frame="31" value="0.6248" />
                    <Key frame="45" value="0.6248" />
                    <Key frame="59" value="0.6248" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="15" value="-27.952" />
                    <Key frame="31" value="-27.952" />
                    <Key frame="45" value="-27.952" />
                    <Key frame="59" value="-27.952" />
                    <Key frame="70" value="7.55628" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="15" value="-4.48007" />
                    <Key frame="31" value="-4.48007" />
                    <Key frame="45" value="-4.48007" />
                    <Key frame="59" value="-4.48007" />
                    <Key frame="70" value="-6.85315" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="15" value="-11.863" />
                    <Key frame="31" value="-11.863" />
                    <Key frame="45" value="-11.863" />
                    <Key frame="59" value="-11.863" />
                    <Key frame="70" value="-9.75358" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="15" value="37.8837" />
                    <Key frame="31" value="37.8837" />
                    <Key frame="45" value="37.8837" />
                    <Key frame="59" value="37.8837" />
                    <Key frame="70" value="-5.44688" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="15" value="55.55" />
                    <Key frame="31" value="55.55" />
                    <Key frame="45" value="55.55" />
                    <Key frame="59" value="55.55" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="15" value="-5.10013" />
                    <Key frame="31" value="-1.93602" />
                    <Key frame="45" value="8.4352" />
                    <Key frame="59" value="11.2477" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="15" value="34.5391" />
                    <Key frame="31" value="35.3301" />
                    <Key frame="45" value="32.6933" />
                    <Key frame="59" value="31.9023" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="187" y="261">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Oye oye   cuando avances   empuja más la pierna izquierda al suelo!" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Set Single LED" id="5" localization="8" tooltip="Set the intensity of a specific LED." x="178" y="381">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LED name"), self.getParameter("Intensity (%)")/100., self.getParameter("Duration (s)"))
        self.onReady() # activate output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
              <Parameter name="LED name" inherits_from_parent="0" content_type="3" value="LeftFootLedsRed" default_value="LeftFaceLed1" custom_choice="0" tooltip="The name of LED which intensity is to set." id="4">
                <Choice value="Brain0" />
                <Choice value="Brain1" />
                <Choice value="Brain2" />
                <Choice value="Brain3" />
                <Choice value="Brain4" />
                <Choice value="Brain5" />
                <Choice value="Brain6" />
                <Choice value="Brain7" />
                <Choice value="Brain8" />
                <Choice value="Brain9" />
                <Choice value="Brain10" />
                <Choice value="Brain11" />
                <Choice value="LeftEarLed1" />
                <Choice value="LeftEarLed2" />
                <Choice value="LeftEarLed3" />
                <Choice value="LeftEarLed4" />
                <Choice value="LeftEarLed5" />
                <Choice value="LeftEarLed6" />
                <Choice value="LeftEarLed7" />
                <Choice value="LeftEarLed8" />
                <Choice value="LeftEarLed9" />
                <Choice value="LeftEarLed10" />
                <Choice value="LeftFaceLed1" />
                <Choice value="LeftFaceLed2" />
                <Choice value="LeftFaceLed3" />
                <Choice value="LeftFaceLed4" />
                <Choice value="LeftFaceLed5" />
                <Choice value="LeftFaceLed6" />
                <Choice value="LeftFaceLed7" />
                <Choice value="LeftFaceLed8" />
                <Choice value="LeftFootLedsBlue" />
                <Choice value="LeftFootLedsGreen" />
                <Choice value="LeftFootLedsRed" />
                <Choice value="RightEarLed1" />
                <Choice value="RightEarLed2" />
                <Choice value="RightEarLed3" />
                <Choice value="RightEarLed4" />
                <Choice value="RightEarLed5" />
                <Choice value="RightEarLed6" />
                <Choice value="RightEarLed7" />
                <Choice value="RightEarLed8" />
                <Choice value="RightEarLed9" />
                <Choice value="RightEarLed10" />
                <Choice value="RightFaceLed1" />
                <Choice value="RightFaceLed2" />
                <Choice value="RightFaceLed3" />
                <Choice value="RightFaceLed4" />
                <Choice value="RightFaceLed5" />
                <Choice value="RightFaceLed6" />
                <Choice value="RightFaceLed7" />
                <Choice value="RightFaceLed8" />
                <Choice value="RightFootLedsBlue" />
                <Choice value="RightFootLedsGreen" />
                <Choice value="RightFootLedsRed" />
              </Parameter>
              <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="60" tooltip="How much time to go to the max/min intensity in seconds." id="6" />
            </Box>
            <Box name="Set Single LED (1)" id="3" localization="8" tooltip="Set the intensity of a specific LED." x="353" y="383">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LED name"), self.getParameter("Intensity (%)")/100., self.getParameter("Duration (s)"))
        self.onReady() # activate output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
              <Parameter name="LED name" inherits_from_parent="0" content_type="3" value="LeftFootLedsRed" default_value="LeftFaceLed1" custom_choice="0" tooltip="The name of LED which intensity is to set." id="4">
                <Choice value="Brain0" />
                <Choice value="Brain1" />
                <Choice value="Brain2" />
                <Choice value="Brain3" />
                <Choice value="Brain4" />
                <Choice value="Brain5" />
                <Choice value="Brain6" />
                <Choice value="Brain7" />
                <Choice value="Brain8" />
                <Choice value="Brain9" />
                <Choice value="Brain10" />
                <Choice value="Brain11" />
                <Choice value="LeftEarLed1" />
                <Choice value="LeftEarLed2" />
                <Choice value="LeftEarLed3" />
                <Choice value="LeftEarLed4" />
                <Choice value="LeftEarLed5" />
                <Choice value="LeftEarLed6" />
                <Choice value="LeftEarLed7" />
                <Choice value="LeftEarLed8" />
                <Choice value="LeftEarLed9" />
                <Choice value="LeftEarLed10" />
                <Choice value="LeftFaceLed1" />
                <Choice value="LeftFaceLed2" />
                <Choice value="LeftFaceLed3" />
                <Choice value="LeftFaceLed4" />
                <Choice value="LeftFaceLed5" />
                <Choice value="LeftFaceLed6" />
                <Choice value="LeftFaceLed7" />
                <Choice value="LeftFaceLed8" />
                <Choice value="LeftFootLedsBlue" />
                <Choice value="LeftFootLedsGreen" />
                <Choice value="LeftFootLedsRed" />
                <Choice value="RightEarLed1" />
                <Choice value="RightEarLed2" />
                <Choice value="RightEarLed3" />
                <Choice value="RightEarLed4" />
                <Choice value="RightEarLed5" />
                <Choice value="RightEarLed6" />
                <Choice value="RightEarLed7" />
                <Choice value="RightEarLed8" />
                <Choice value="RightEarLed9" />
                <Choice value="RightEarLed10" />
                <Choice value="RightFaceLed1" />
                <Choice value="RightFaceLed2" />
                <Choice value="RightFaceLed3" />
                <Choice value="RightFaceLed4" />
                <Choice value="RightFaceLed5" />
                <Choice value="RightFaceLed6" />
                <Choice value="RightFaceLed7" />
                <Choice value="RightFaceLed8" />
                <Choice value="RightFootLedsBlue" />
                <Choice value="RightFootLedsGreen" />
                <Choice value="RightFootLedsRed" />
              </Parameter>
              <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="60" tooltip="How much time to go to the max/min intensity in seconds." id="6" />
            </Box>
            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="3" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
